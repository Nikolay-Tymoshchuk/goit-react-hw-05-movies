{"version":3,"file":"static/js/400.af1c2b8a.chunk.js","mappings":"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","sources":["api/tmdbApi.js","components/movie-details/MovieDetails.styled.jsx","components/movie-details/MovieDetails.jsx","hooks/hooks.js","helpers/normalizers.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '5ce599886a4c0703a030654068991e03';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst END_POINTS = {\n  TRENDING: '/trending/movie/day',\n  SEARCH_MOVIE: '/search/movie',\n  DETAILS: '/movie/',\n};\n\nexport const getTrending = async () => {\n  const request = await axios.get(\n    `${END_POINTS.TRENDING}?api_key=${API_KEY}&language=en-US&page=1&time_window=week`\n  );\n  return request.data;\n};\n\nexport const getSearchMovie = async query => {\n  const request = await axios.get(\n    `${END_POINTS.SEARCH_MOVIE}?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n  );\n  return request.data;\n};\n\nexport const getMovieDetails = async id => {\n  const request = await axios.get(`${END_POINTS.DETAILS}${id}?api_key=${API_KEY}`);\n  return request.data;\n};\n\nexport const getMovieActors = async id => {\n  const request = await axios.get(`${END_POINTS.DETAILS}${id}/credits?api_key=${API_KEY}`);\n  return request.data;\n};\n\nexport const getMovieReviews = async id => {\n  const request = await axios.get(`${END_POINTS.DETAILS}${id}/reviews?api_key=${API_KEY}`);\n  return request.data;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const FilmDataBox = styled.div`\n  display: flex;\n  padding: 20px;\n  box-shadow: 1px 3px 3px #b9b9b9;\n`;\n\nexport const ImageBox = styled.div`\n  min-width: 300px;\n  margin-right: 2rem;\n`;\n\nexport const AdditionalInfo = styled.div`\n  padding: 20px;\n  padding-top: 0;\n  box-shadow: 1px 3px 3px #b9b9b9;\n`;\n\nexport const GoBack = styled(Link)`\n  display: inline-flex;\n  margin-left: 20px;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { useFetchMovie } from 'hooks/hooks';\nimport { Link, Outlet } from 'react-router-dom';\nimport { ImageBox, FilmDataBox, GoBack, AdditionalInfo } from './MovieDetails.styled';\nimport { useLocation } from 'react-router-dom';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { Suspense } from 'react';\n\nfunction MovieDetails() {\n  const location = useLocation();\n  const toGoBack = location.state?.from ?? '/movies';\n\n  const movie = useFetchMovie();\n\n  return (\n    <>\n      {!movie && <div>Loading...</div>}\n      {movie && (\n        <>\n          <GoBack to={toGoBack}>\n            <HiArrowLeft size=\"24\" />\n            GO BACK\n          </GoBack>\n          <FilmDataBox>\n            <ImageBox>\n              <img src={movie.poster} alt={movie.title} />\n            </ImageBox>\n            <div>\n              <h2>\n                {movie.title} {`(${movie.release})`}\n              </h2>\n              <p>User score: {movie.rating}</p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              <p>{movie.genres}</p>\n            </div>\n          </FilmDataBox>\n          <AdditionalInfo>\n            <h4>Additional information</h4>\n            <ul>\n              <li>\n                <Link to={'cast'} state={{ from: toGoBack }}>\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link to={'reviews'} state={{ from: toGoBack }}>\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </AdditionalInfo>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default MovieDetails;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieDetails } from 'api/tmdbApi';\nimport { normalizerIncomingFilmData } from 'helpers/normalizers';\n\nexport const useFetchMovie = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n    getMovieDetails(movieId).then(data => {\n      setMovie(normalizerIncomingFilmData(data));\n    });\n  }, [movieId]);\n\n  return movie;\n};\n","const IMAGE_URL = 'https://image.tmdb.org/t/p/';\n\nexport const normalizerIncomingFilmData = film => {\n  const { title, vote_average, release_date, overview, genres, poster_path } = film;\n  const rating =\n    (vote_average * 10) % 1 === 0\n      ? Number(vote_average * 10) + '%'\n      : (vote_average * 10).toFixed(1) + '%';\n  const release = release_date.split('-')[0];\n  const genre = genres.map(genre => genre.name).join(', ');\n  const poster = `${IMAGE_URL}w300${poster_path}`;\n  return {\n    title,\n    rating,\n    release,\n    overview,\n    genres: genre,\n    poster,\n  };\n};\n\nexport const normalizerIncomingActorsData = data => {\n  return data.cast.map(({ id, character, original_name: name, profile_path }) => {\n    const photo =\n      profile_path !== null\n        ? `${IMAGE_URL}original${profile_path}`\n        : 'https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png';\n    return { id, character, name, photo };\n  });\n};\n\nexport const normalizerIncomingReviewsData = data => {\n  return data.results.map(({ id, author, content, author_details: { avatar_path } }) => {\n    const regex = '^/+[a-zA-Z0-9]+[.]+[a-z]+$';\n    let avatar =\n      avatar_path ?? 'https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png';\n\n    if (avatar.match(regex)) {\n      avatar = `${IMAGE_URL}original${avatar}`;\n    }\n\n    if (avatar.startsWith('/')) {\n      avatar = avatar.substring(1);\n    }\n\n    return { id, author, content, avatar };\n  });\n};\n"],"names":["API_KEY","axios","END_POINTS","getTrending","request","data","getSearchMovie","query","getMovieDetails","id","getMovieActors","getMovieReviews","FilmDataBox","styled","ImageBox","AdditionalInfo","GoBack","Link","toGoBack","useLocation","state","from","movie","movieId","useParams","useState","setMovie","useEffect","then","normalizerIncomingFilmData","useFetchMovie","to","size","src","poster","alt","title","release","rating","overview","genres","Suspense","fallback","IMAGE_URL","film","vote_average","release_date","poster_path","Number","toFixed","split","map","genre","name","join","normalizerIncomingActorsData","cast","character","original_name","profile_path","photo","normalizerIncomingReviewsData","results","author","content","avatar_path","author_details","avatar","match","startsWith","substring"],"sourceRoot":""}