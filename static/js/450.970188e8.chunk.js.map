{"version":3,"file":"static/js/450.970188e8.chunk.js","mappings":"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","sources":["api/tmdbApi.js","components/movie-details/MovieDetails.styled.jsx","components/movie-details/GoBackLink.jsx","components/movie-details/FilmMainData.jsx","components/movie-details/AdditionalInformation.jsx","components/movie-details/MovieDetails.jsx","hooks/hooks.js","helpers/normalizers.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '5ce599886a4c0703a030654068991e03';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst END_POINTS = {\n  TRENDING: '/trending/movie/day',\n  SEARCH_MOVIE: '/search/movie',\n  DETAILS: '/movie/',\n};\n\nexport const getTrending = async () => {\n  const request = await axios.get(\n    `${END_POINTS.TRENDING}?api_key=${API_KEY}&language=en-US&page=1&time_window=week`\n  );\n  return request.data;\n};\n\nexport const getSearchMovie = async query => {\n  const request = await axios.get(\n    `${END_POINTS.SEARCH_MOVIE}?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n  );\n  return request.data;\n};\n\nexport const getMovieDetails = async id => {\n  const request = await axios.get(`${END_POINTS.DETAILS}${id}?api_key=${API_KEY}`);\n  return request.data;\n};\n\nexport const getMovieActors = async id => {\n  const request = await axios.get(`${END_POINTS.DETAILS}${id}/credits?api_key=${API_KEY}`);\n  return request.data;\n};\n\nexport const getMovieReviews = async id => {\n  const request = await axios.get(`${END_POINTS.DETAILS}${id}/reviews?api_key=${API_KEY}`);\n  return request.data;\n};\n","import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const FilmDataBox = styled.div`\n  display: flex;\n  padding: 20px;\n  box-shadow: 1px 3px 3px #b9b9b9;\n`;\n\nexport const ImageBox = styled.div`\n  min-width: 300px;\n  margin-right: 2rem;\n`;\n\nexport const AdditionalInfo = styled.div`\n  padding: 20px;\n  padding-top: 0;\n  box-shadow: 1px 3px 3px #b9b9b9;\n`;\n\nexport const GoBack = styled(Link)`\n  display: inline-flex;\n  margin-left: 20px;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 2em;\n`;\n\nexport const AdditionalInfoLink = styled(NavLink)`\n  text-decoration: none;\n  font-weight: 500;\n  display: inline-block;\n  padding: 8px 16px;\n  border-radius: 4px;\n  color: black;\n\n  :hover {\n    color: orangered;\n  }\n\n  &.active {\n    border: 1px solid orangered;\n    color: orangered;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { GoBack } from './MovieDetails.styled';\nimport { HiArrowLeft } from 'react-icons/hi';\n\nexport const GoBackLink = ({ history }) => {\n  return (\n    <GoBack to={history}>\n      <HiArrowLeft size=\"24\" />\n      GO BACK\n    </GoBack>\n  );\n};\n\nGoBackLink.propTypes = {\n  history: PropTypes.exact({\n    pathname: PropTypes.string.isRequired,\n    search: PropTypes.string.isRequired,\n    hash: PropTypes.string.isRequired,\n    state: PropTypes.object,\n    key: PropTypes.string,\n  }).isRequired,\n};\n","import { ImageBox, FilmDataBox } from './MovieDetails.styled';\nexport const FilmMainData = ({ options }) => {\n  const { poster, title, release, rating, genres, overview } = options;\n  return (\n    <FilmDataBox>\n      <ImageBox>\n        <img src={poster} alt={title} />\n      </ImageBox>\n      <div>\n        <h2>\n          {title} {`(${release})`}\n        </h2>\n        <p>User score: {rating}</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres}</p>\n      </div>\n    </FilmDataBox>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { AdditionalInfo, List, AdditionalInfoLink } from './MovieDetails.styled';\n\nexport const AdditionalInformation = ({ history }) => {\n  return (\n    <AdditionalInfo>\n      <h4>Additional information</h4>\n      <List>\n        <li>\n          <AdditionalInfoLink to={'cast'} state={{ from: history }}>\n            Cast\n          </AdditionalInfoLink>\n        </li>\n        <li>\n          <AdditionalInfoLink to={'reviews'} state={{ from: history }}>\n            Reviews\n          </AdditionalInfoLink>\n        </li>\n      </List>\n    </AdditionalInfo>\n  );\n};\n\nAdditionalInformation.propTypes = {\n  history: PropTypes.exact({\n    pathname: PropTypes.string.isRequired,\n    search: PropTypes.string.isRequired,\n    hash: PropTypes.string.isRequired,\n    state: PropTypes.object,\n    key: PropTypes.string,\n  }).isRequired,\n};\n","import { useFetchMovie } from 'hooks/hooks';\nimport { Outlet } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { Pulsar } from '@uiball/loaders';\nimport { GoBackLink } from './GoBackLink';\nimport { FilmMainData } from './FilmMainData';\nimport { AdditionalInformation } from './AdditionalInformation';\n\nfunction MovieDetails() {\n  const location = useLocation();\n  const toGoBack = location.state?.from ?? '/movies';\n\n  const movie = useFetchMovie();\n\n  return (\n    <>\n      {!movie && <Pulsar />}\n      {movie && (\n        <>\n          <GoBackLink history={toGoBack} />\n          <FilmMainData options={movie} />\n          <AdditionalInformation history={toGoBack} />\n          <Suspense fallback={<Pulsar />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default MovieDetails;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieDetails } from 'api/tmdbApi';\nimport { normalizerIncomingFilmData } from 'helpers/normalizers';\n\nexport const useFetchMovie = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n    getMovieDetails(movieId).then(data => {\n      setMovie(normalizerIncomingFilmData(data));\n    });\n  }, [movieId]);\n\n  return movie;\n};\n","const IMAGE_URL = 'https://image.tmdb.org/t/p/';\n\nexport const normalizerIncomingFilmData = film => {\n  const { title, vote_average, release_date, overview, genres, poster_path } = film;\n  const rating =\n    (vote_average * 10) % 1 === 0\n      ? Number(vote_average * 10) + '%'\n      : (vote_average * 10).toFixed(1) + '%';\n  const release = release_date.split('-')[0];\n  const genre = genres.map(genre => genre.name).join(', ');\n  const poster = `${IMAGE_URL}w300${poster_path}`;\n  return {\n    title,\n    rating,\n    release,\n    overview,\n    genres: genre,\n    poster,\n  };\n};\n\nexport const normalizerIncomingFilmListData = filmList => {\n  return filmList.map(({ id, title }) => ({ id, title }));\n};\n\nexport const normalizerIncomingActorsData = data => {\n  return data.cast.map(({ id, character, original_name: name, profile_path }) => {\n    const photo =\n      profile_path !== null\n        ? `${IMAGE_URL}original${profile_path}`\n        : 'https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png';\n    return { id, character, name, photo };\n  });\n};\n\nexport const normalizerIncomingReviewsData = data => {\n  return data.results.map(({ id, author, content, author_details: { avatar_path } }) => {\n    const regex = '^/+[a-zA-Z0-9]+[.]+[a-z]+$';\n    let avatar =\n      avatar_path ?? 'https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png';\n\n    if (avatar.match(regex)) {\n      avatar = `${IMAGE_URL}original${avatar}`;\n    }\n\n    if (avatar.startsWith('/')) {\n      avatar = avatar.substring(1);\n    }\n\n    return { id, author, content, avatar };\n  });\n};\n"],"names":["API_KEY","axios","END_POINTS","getTrending","request","data","getSearchMovie","query","getMovieDetails","id","getMovieActors","getMovieReviews","FilmDataBox","styled","ImageBox","AdditionalInfo","GoBack","Link","List","AdditionalInfoLink","NavLink","GoBackLink","history","to","size","FilmMainData","options","poster","title","release","rating","genres","overview","src","alt","AdditionalInformation","state","from","toGoBack","useLocation","movie","movieId","useParams","useState","setMovie","useEffect","then","normalizerIncomingFilmData","useFetchMovie","Pulsar","Suspense","fallback","IMAGE_URL","film","vote_average","release_date","poster_path","Number","toFixed","split","map","genre","name","join","normalizerIncomingFilmListData","filmList","normalizerIncomingActorsData","cast","character","original_name","profile_path","photo","normalizerIncomingReviewsData","results","author","content","avatar_path","author_details","avatar","match","startsWith","substring"],"sourceRoot":""}