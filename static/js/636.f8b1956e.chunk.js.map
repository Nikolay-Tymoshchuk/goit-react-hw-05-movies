{"version":3,"file":"static/js/636.f8b1956e.chunk.js","mappings":"oSAEMA,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EACM,sBADNA,EAEU,gBAFVA,EAGK,UAGEC,EAAW,mCAAG,oGACHF,IAAAA,IAAA,UACjBC,EADiB,oBACcF,EADd,4CADG,cACnBI,EADmB,yBAIlBA,EAAQC,MAJU,2CAAH,qDAOXC,EAAc,mCAAG,WAAMC,GAAN,uFACNN,IAAAA,IAAA,UACjBC,EADiB,oBACkBF,EADlB,kBACmCO,EADnC,gCADM,cACtBH,EADsB,yBAIrBA,EAAQC,MAJa,2CAAH,sDAOdG,EAAe,mCAAG,WAAMC,GAAN,uFACPR,IAAAA,IAAA,UAAaC,GAAb,OAAkCO,EAAlC,oBAAgDT,IADzC,cACvBI,EADuB,yBAEtBA,EAAQC,MAFc,2CAAH,sDAKfK,EAAc,mCAAG,WAAMD,GAAN,uFACNR,IAAAA,IAAA,UAAaC,GAAb,OAAkCO,EAAlC,4BAAwDT,IADlD,cACtBI,EADsB,yBAErBA,EAAQC,MAFa,2CAAH,uD,2FC3BdM,EAAOC,EAAAA,EAAAA,GAAH,oFAMJC,EAAYD,EAAAA,EAAAA,GAAH,4RAeTE,GAAWF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,4F,6BCArB,EApBkB,SAAC,GAAe,IAAbI,EAAY,EAAZA,MACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,8BACGF,IACC,SAACL,EAAD,UACGK,EAAMG,KAAI,SAAAC,GAAI,OACb,UAACP,EAAD,YACE,SAAC,MAAD,KACA,SAACC,EAAD,CAAUO,GAAE,kBAAaD,EAAKX,IAAMa,MAAO,CAAEC,KAAMN,GAAnD,SACGG,EAAKI,UAHMJ,EAAKX,a,kICTpBgB,E,QAAab,EAAAA,KAAH,8C,SCiCvB,MA/BA,YAA6B,IAAbc,EAAY,EAAZA,SACd,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAcA,OACE,UAACJ,EAAD,CAAYK,SAbO,SAAAC,GACnBA,EAAEC,iBACF,IAAM5B,EAAUwB,EAAOK,OACvB,GAAuB,IAAnB7B,EAAQ8B,OAGV,OAFAC,EAAAA,GAAAA,MAAY,mCACZN,EAAU,IAGZH,EAAStB,GACTyB,EAAU,KAIV,WACE,kBACEO,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,qBACZC,SAAU,SAAAT,GAAC,OAAIF,EAAUE,EAAEU,OAAOC,QAClCA,MAAOd,EACPe,UAAQ,KAEV,mBAAQP,KAAK,SAAb,wB,SCEN,EAzBe,WACb,OAAwCQ,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BnB,EAAAA,EAAAA,UAAS,MAArC,eAAOoB,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMrB,EAASiB,EAAaK,IAAI,SAC3BtB,IACLtB,EAAAA,EAAAA,IAAesB,GAAQuB,MAAK,SAAA9C,GAC1B,IAAQ+C,EAAY/C,EAAZ+C,QACW,IAAnBA,EAAQlB,OAAeC,EAAAA,GAAAA,MAAY,oBAAsBa,EAAUI,QAEpE,CAACP,IAMJ,OACE,iCACE,SAAC,EAAD,CAAMnB,SANuB,SAAAgB,GAC/BI,EAAgB,CAAEvC,MAAOmC,OAMtBK,IAAU,SAAC,IAAD,CAAW/B,MAAO+B","sources":["api/tmdbApi.js","components/films-list/FilmsList.styled.jsx","components/films-list/FilmsList.jsx","components/search-form/SearchForm.styled.jsx","components/search-form/SearchForm.jsx","pages/movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '5ce599886a4c0703a030654068991e03';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst END_POINTS = {\n  TRENDING: '/trending/movie/day',\n  SEARCH_MOVIE: '/search/movie',\n  DETAILS: '/movie/',\n};\n\nexport const getTrending = async () => {\n  const request = await axios.get(\n    `${END_POINTS.TRENDING}?api_key=${API_KEY}&language=en-US&page=1&time_window=week`\n  );\n  return request.data;\n};\n\nexport const getSearchMovie = async query => {\n  const request = await axios.get(\n    `${END_POINTS.SEARCH_MOVIE}?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n  );\n  return request.data;\n};\n\nexport const getMovieDetails = async id => {\n  const request = await axios.get(`${END_POINTS.DETAILS}${id}?api_key=${API_KEY}`);\n  return request.data;\n};\n\nexport const getMovieActors = async id => {\n  const request = await axios.get(`${END_POINTS.DETAILS}${id}/credits?api_key=${API_KEY}`);\n  return request.data;\n};\n\nexport const getMovieReviews = async id => {\n  const request = await axios.get(`${END_POINTS.DETAILS}${id}/reviews?api_key=${API_KEY}`);\n  return request.data;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  padding: 0.5em;\n  font-size: 20px;\n  list-style: none;\n`;\n\nexport const ListChild = styled.li`\n  padding-top: 5px;\n  padding-bottom: 5px;\n  display: flex;\n  align-items: center;\n\n  &:hover {\n    color: orangered;\n    /* letter-spacing: 0.1em; */\n    transform-origin: left bottom;\n    transform: scale(1.05);\n    transition: 200ms linear;\n  }\n`;\n\nexport const LinkFilm = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n  margin-left: 0.5em;\n`;\n","import { List, ListChild, LinkFilm } from './FilmsList.styled';\nimport { useLocation } from 'react-router-dom';\nimport { BiMoviePlay } from 'react-icons/bi';\n\nconst FilmsList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <>\n      {films && (\n        <List>\n          {films.map(film => (\n            <ListChild key={film.id}>\n              <BiMoviePlay />\n              <LinkFilm to={`/movies/${film.id}`} state={{ from: location }}>\n                {film.title}\n              </LinkFilm>\n            </ListChild>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default FilmsList;\n","import styled from '@emotion/styled';\n\nexport const FormStyled = styled.form`\n  margin-left: 20px;\n`;\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { FormStyled } from './SearchForm.styled';\n\nfunction Form({ onSearch }) {\n  const [search, setSearch] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const request = search.trim();\n    if (request.length === 0) {\n      toast.error('Request could not be empty');\n      setSearch('');\n      return;\n    }\n    onSearch(request);\n    setSearch('');\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Enter a movie name\"\n        onChange={e => setSearch(e.target.value)}\n        value={search}\n        required\n      />\n      <button type=\"submit\">Search</button>\n    </FormStyled>\n  );\n}\n\nexport default Form;\n","import { useState, useEffect } from 'react';\nimport FilmsList from 'components/films-list';\nimport { getSearchMovie } from 'api/tmdbApi';\nimport Form from 'components/search-form';\nimport { toast } from 'react-toastify';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    const search = searchParams.get('query');\n    if (!search) return;\n    getSearchMovie(search).then(data => {\n      const { results } = data;\n      results.length === 0 ? toast.error('No results found') : setMovies(results);\n    });\n  }, [searchParams]);\n\n  const handleSearchAndUrlChange = value => {\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <>\n      <Form onSearch={handleSearchAndUrlChange} />\n      {movies && <FilmsList films={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","axios","END_POINTS","getTrending","request","data","getSearchMovie","query","getMovieDetails","id","getMovieActors","List","styled","ListChild","LinkFilm","Link","films","location","useLocation","map","film","to","state","from","title","FormStyled","onSearch","useState","search","setSearch","onSubmit","e","preventDefault","trim","length","toast","type","autoComplete","autoFocus","placeholder","onChange","target","value","required","useSearchParams","searchParams","setSearchParams","movies","setMovies","useEffect","get","then","results"],"sourceRoot":""}